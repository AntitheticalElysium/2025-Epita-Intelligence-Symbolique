# Fichier .gitignore pour le projet d'analyse rhétorique

# Environnements virtuels Python
venv/
.venv/
env/
ENV/

# Fichiers de configuration sensibles
.env # Ne JAMAIS commiter le fichier .env contenant les secrets !
*.env # Ignorer aussi les fichiers .env spécifiques (s'ils existent)
**/.env # Ignorer les fichiers .env dans tous les sous-répertoires

# Fichiers Bytecode Python et Cache
__pycache__/
*.pyc
*.pyo
*.pyd

# Artefacts de Distribution/Build Python
build/
dist/
*.egg-info/
*.egg
wheels/
pip-wheel-metadata/
develop-eggs/
parts/
sdist/
var/

# Fichiers temporaires Jupyter Notebook
.ipynb_checkpoints/

# Fichiers de configuration IDE / Editeur
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
*.swp
*.swo
*~
#*#

# Fichiers spécifiques OS
.DS_Store
Thumbs.db

# Logs
*.log
logs/

# Cache, Téléchargements et Bibliothèques Externes
text_cache/
temp_downloads/
libs/

# Données (à adapter si certains fichiers DOIVENT être versionnés)
# Ignore le contenu du dossier data (CSV téléchargé, config UI sauvegardée...)
# Si vous voulez versionner un fichier spécifique DANS data, utilisez une règle d'exception,
# par exemple : !data/fichier_a_garder.txt ou !data/.gitkeep pour garder le dossier vide.
data/
# Exception pour le fichier de configuration chiffré qui doit être versionné
!data/extract_sources.json.gz.enc

# Configuration UI non chiffrée (ne doit jamais être versionnée)
data/extract_sources.json

# Rapports de tests et couverture
.pytest_cache/
htmlcov/
.coverage*

# Dossiers de backups générés par les scripts d'optimisation
# Ces fichiers sont des sauvegardes temporaires et ne devraient pas être versionnés
**/backups/
# Exception pour le fichier __init__.py dans les dossiers backups
!**/backups/__init__.py

# Dossier config vide (à supprimer s'il n'est pas utilisé)
config/

# Fichiers JAR (généralement volumineux)
*.jar